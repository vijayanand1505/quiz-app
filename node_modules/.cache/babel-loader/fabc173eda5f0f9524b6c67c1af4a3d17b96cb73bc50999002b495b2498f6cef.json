{"ast":null,"code":"var _jsxFileName = \"/Users/vijayanand/Desktop/quiz-app/src/components/Result/QNA.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QNA = ({\n  questionsAndAnswers\n}) => {\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    striped: true,\n    selectable: true,\n    size: \"large\",\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Your Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Correct Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: questionsAndAnswers.map((item, i) => /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: item.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: item.user_answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: item.correct_answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: item.point\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, i + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = QNA;\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired\n};\nexport default QNA;\nvar _c;\n$RefreshReg$(_c, \"QNA\");","map":{"version":3,"names":["React","PropTypes","Table","jsxDEV","_jsxDEV","QNA","questionsAndAnswers","celled","striped","selectable","size","children","Header","Row","HeaderCell","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","item","i","Cell","question","user_answer","correct_answer","point","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["/Users/vijayanand/Desktop/quiz-app/src/components/Result/QNA.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst QNA = ({ questionsAndAnswers }) => {\n  return (\n    <Table celled striped selectable size=\"large\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>No.</Table.HeaderCell>\n          <Table.HeaderCell>Questions</Table.HeaderCell>\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n          <Table.HeaderCell>Points</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {questionsAndAnswers.map((item, i) => (\n          <Table.Row key={i + 1}>\n            <Table.Cell>{i + 1}</Table.Cell>\n            <Table.Cell>{item.question}</Table.Cell>\n            <Table.Cell>{item.user_answer}</Table.Cell>\n            <Table.Cell>{item.correct_answer}</Table.Cell>\n            <Table.Cell>{item.point}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired,\n};\n\nexport default QNA;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}