{"ast":null,"code":"var _jsxFileName = \"/Users/vijayanand/Desktop/quiz-app/src/components/App/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Layout from \"../Layout\";\nimport Loader from \"../Loader\";\nimport Main from \"../Main\";\nimport Quiz from \"../Quiz\";\nimport Result from \"../Result\";\nimport { shuffle } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  const [data, setData] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n  const startQuiz = (data, countdownTime) => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Loading your quiz...\",\n      message: \"It won't be long!\"\n    });\n    setCountdownTime(countdownTime);\n    setTimeout(() => {\n      setData(data);\n      setIsQuizStarted(true);\n      setLoading(false);\n    }, 1000);\n  };\n  const endQuiz = resultData => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Fetching your results...\",\n      message: \"Just a moment!\"\n    });\n    setTimeout(() => {\n      setIsQuizStarted(false);\n      setIsQuizCompleted(true);\n      setResultData(resultData);\n      setLoading(false);\n    }, 2000);\n  };\n  const replayQuiz = () => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Getting ready for round two.\",\n      message: \"It won't take long!\"\n    });\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n    setData(shuffledData);\n    setTimeout(() => {\n      setIsQuizStarted(true);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n  const resetQuiz = () => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Loading the home screen.\",\n      message: \"Thank you for playing!\"\n    });\n    setTimeout(() => {\n      setData(null);\n      setCountdownTime(null);\n      setIsQuizStarted(false);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {\n      ...loadingMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this), !loading && !isQuizStarted && !isQuizCompleted && /*#__PURE__*/_jsxDEV(Main, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), !loading && isQuizStarted && /*#__PURE__*/_jsxDEV(Quiz, {\n      data: data,\n      countdownTime: countdownTime,\n      endQuiz: endQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), !loading && isQuizCompleted && /*#__PURE__*/_jsxDEV(Result, {\n      ...resultData,\n      replayQuiz: replayQuiz,\n      resetQuiz: resetQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wVMjD88GK3V68yjelzmGfE+BvoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","Loader","Main","Quiz","Result","shuffle","jsxDEV","_jsxDEV","App","_s","loading","setLoading","loadingMessage","setLoadingMessage","data","setData","countdownTime","setCountdownTime","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","startQuiz","title","message","setTimeout","endQuiz","replayQuiz","shuffledData","forEach","element","options","resetQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vijayanand/Desktop/quiz-app/src/components/App/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../Layout\";\nimport Loader from \"../Loader\";\nimport Main from \"../Main\";\nimport Quiz from \"../Quiz\";\nimport Result from \"../Result\";\n\nimport { shuffle } from \"../../utils\";\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  const [data, setData] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime) => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Loading your quiz...\",\n      message: \"It won't be long!\",\n    });\n    setCountdownTime(countdownTime);\n\n    setTimeout(() => {\n      setData(data);\n      setIsQuizStarted(true);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const endQuiz = (resultData) => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Fetching your results...\",\n      message: \"Just a moment!\",\n    });\n\n    setTimeout(() => {\n      setIsQuizStarted(false);\n      setIsQuizCompleted(true);\n      setResultData(resultData);\n      setLoading(false);\n    }, 2000);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Getting ready for round two.\",\n      message: \"It won't take long!\",\n    });\n\n    const shuffledData = shuffle(data);\n    shuffledData.forEach((element) => {\n      element.options = shuffle(element.options);\n    });\n\n    setData(shuffledData);\n\n    setTimeout(() => {\n      setIsQuizStarted(true);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n    setLoadingMessage({\n      title: \"Loading the home screen.\",\n      message: \"Thank you for playing!\",\n    });\n\n    setTimeout(() => {\n      setData(null);\n      setCountdownTime(null);\n      setIsQuizStarted(false);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <Layout>\n      {loading && <Loader {...loadingMessage} />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,MAAM,MAAM,WAAW;AAE9B,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMyB,SAAS,GAAGA,CAACV,IAAI,EAAEE,aAAa,KAAK;IACzCL,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC;MAChBY,KAAK,EAAE,sBAAsB;MAC7BC,OAAO,EAAE;IACX,CAAC,CAAC;IACFT,gBAAgB,CAACD,aAAa,CAAC;IAE/BW,UAAU,CAAC,MAAM;MACfZ,OAAO,CAACD,IAAI,CAAC;MACbK,gBAAgB,CAAC,IAAI,CAAC;MACtBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMiB,OAAO,GAAIN,UAAU,IAAK;IAC9BX,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC;MAChBY,KAAK,EAAE,0BAA0B;MACjCC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFC,UAAU,CAAC,MAAM;MACfR,gBAAgB,CAAC,KAAK,CAAC;MACvBE,kBAAkB,CAAC,IAAI,CAAC;MACxBE,aAAa,CAACD,UAAU,CAAC;MACzBX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvBlB,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC;MAChBY,KAAK,EAAE,8BAA8B;MACrCC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMI,YAAY,GAAGzB,OAAO,CAACS,IAAI,CAAC;IAClCgB,YAAY,CAACC,OAAO,CAAEC,OAAO,IAAK;MAChCA,OAAO,CAACC,OAAO,GAAG5B,OAAO,CAAC2B,OAAO,CAACC,OAAO,CAAC;IAC5C,CAAC,CAAC;IAEFlB,OAAO,CAACe,YAAY,CAAC;IAErBH,UAAU,CAAC,MAAM;MACfR,gBAAgB,CAAC,IAAI,CAAC;MACtBE,kBAAkB,CAAC,KAAK,CAAC;MACzBE,aAAa,CAAC,IAAI,CAAC;MACnBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuB,SAAS,GAAGA,CAAA,KAAM;IACtBvB,UAAU,CAAC,IAAI,CAAC;IAChBE,iBAAiB,CAAC;MAChBY,KAAK,EAAE,0BAA0B;MACjCC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFC,UAAU,CAAC,MAAM;MACfZ,OAAO,CAAC,IAAI,CAAC;MACbE,gBAAgB,CAAC,IAAI,CAAC;MACtBE,gBAAgB,CAAC,KAAK,CAAC;MACvBE,kBAAkB,CAAC,KAAK,CAAC;MACzBE,aAAa,CAAC,IAAI,CAAC;MACnBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEJ,OAAA,CAACP,MAAM;IAAAmC,QAAA,GACJzB,OAAO,iBAAIH,OAAA,CAACN,MAAM;MAAA,GAAKW;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzC,CAAC7B,OAAO,IAAI,CAACQ,aAAa,IAAI,CAACE,eAAe,iBAC7Cb,OAAA,CAACL,IAAI;MAACsB,SAAS,EAAEA;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9B,EACA,CAAC7B,OAAO,IAAIQ,aAAa,iBACxBX,OAAA,CAACJ,IAAI;MAACW,IAAI,EAAEA,IAAK;MAACE,aAAa,EAAEA,aAAc;MAACY,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpE,EACA,CAAC7B,OAAO,IAAIU,eAAe,iBAC1Bb,OAAA,CAACH,MAAM;MAAA,GAAKkB,UAAU;MAAEO,UAAU,EAAEA,UAAW;MAACK,SAAS,EAAEA;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAAC9B,EAAA,CA5FID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA8FT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}